apiVersion: apps/v1
kind: Deployment
metadata:
  name: authorization-server
  labels:
    app.kubernetes.io/name: authorization-server
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: authorization-server
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: authorization-server
      annotations:
        sidecar.opentelemetry.io/inject: "true"
    spec:
      containers:
        - name: authorization-server
          image: 'knowledge420/spring-authorization-server-demo'
          imagePullPolicy: Always
          ports:
            - containerPort: 9000
              name: service
          env:
            - name: OTEL_SERVICE_NAME
              value: authorization-server
            - name: OTEL_EXPORTER_OTLP_ENDPOINT
              value: http://localhost:4317
            - name: OTEL_TRACES_EXPORTER
              value: otlp
            - name: OTEL_METRICS_EXPORTER
              value: none
            - name: OTEL_RESOURCE_ATTRIBUTES
              value: service.name=authorization-server
          resources:
            limits:
              memory: 300Mi

---

apiVersion: v1
kind: Service
metadata:
  name: authorization-server
  labels:
    app.kubernetes.io/name: authorization-server
spec:
  type: ClusterIP
  ports:
    - port: 8080
      name: service
      targetPort: 9000
  selector:
    app.kubernetes.io/name: authorization-server

---

apiVersion: "networking.k8s.io/v1"
kind: Ingress
metadata:
  name: authorization-server
  labels:
    app.kubernetes.io/name: authorization-server
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "false"
spec:
  ingressClassName: nginx
  rules:
    - host: gke-cluster-demo
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: authorization-server
                port:
                  number: 8080